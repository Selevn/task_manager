<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Home</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="bs/css/bootstrap.min.css" type="text/css" rel="stylesheet">
    <link href="bs/css/jquery-ui.min.css" type="text/css" rel="stylesheet">
    <link href="main.css" type="text/css" rel="stylesheet">
    <script src="bs/js/jquery.min.js"></script>
    <script src="bs/js/jquery-ui.min.js"></script>
    <script src="bs/js/bootstrap.min.js"></script>
    <style>
        #sortable1, #sortable2 {
            border: 1px solid #eee;
            width: 142px;
            min-height: 20px;
            list-style-type: none;
            margin: 0;
            padding: 5px 0 0 0;
            float: left;
            margin-right: 10px;
        }
        #sortable1 li, #sortable2 li {
            margin: 0 5px 5px 5px;
            padding: 5px;
            font-size: 1.2em;
            width: 120px;
        }
    </style>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Tasker</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
        </ul>
        <div class="navbar-nav mr-3">
            <span class="nav-item nav-link user mr-3" id="username">{{username}}</span>
            <a class="nav-item nav-link" href="/login/logout/">Exit</a>
        </div>
    </div>
</nav>
<div style ="width:100%; padding:0;">
    <div class="container h-100-percent global_container" style = "max-width:100%">
        <div class="row h-100-percent">
            <div class="col-2 friends">
                <div class = "container friend-list">
                    <h3>Друзья</h3>
                    <div><input type="text" id = "friend_name" placeholder="Найдите друга"><input type="button" value="Найти" onclick="find_friend()"></div><hr>

                </div>
            </div>
            <div class="col-8 decks_list h-100-percent">
                <div class = "container main_text_container">
                    <div class = "row">
                        <div class="col-sm-4">
                        </div>
                        <div class="col-sm-4 middle_text">
                            <h3>Descs</h3>
                        </div>
                        <div class="col-sm-4 right_text">
                            <button class="btn-primary" id="add_desc" onclick="add_desc()">Add</button>
                        </div>
                    </div>

                </div>

                {{#each desc}}
                <div class="card w-100">
                    <div class="card-body">
                        <h5 class="card-title">{{this.name}}</h5>
                        <p class="card-text">{{this.description}}</p>
                        <a href="/desc/{{this.id}}" class="btn btn-primary">Go!</a>
                        <a style="color:#fff" onclick = "leave_desc({{this.id}})" class="btn btn-danger">Leave this desc</a>
                    </div>
                </div>
                {{/each}}
            </div>
            <div class="col-2 notifications">
                <div class = "container notifications-list">
                    <h3>Уведомления</h3>
                    <hr>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
<script src = "/js/notifications.js"></script>
<script>
function add_desc()
{
    var description, name;
    name = prompt("Ввседите имя: ");

    if (name != null) {

        description = prompt("Ввседите описание: ");
        if(description != null) {
            // Создаем экземпляр класса XMLHttpRequest
            const request = new XMLHttpRequest();
            // Указываем путь до файла на сервере, который будет обрабатывать наш запрос
            const url = "/add_desc";
            // Так же как и в GET составляем строку с данными, но уже без пути к файлу
            // const params = "name=" + name+ "&description=" + description;
            var params = JSON.stringify({name: name, description: description});
            request.open("POST", url, true);
            //request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            request.setRequestHeader("Content-Type", "application/json");
            request.addEventListener("readystatechange", () => {
                if (request.readyState === 4 && request.status === 200) {
                    console.log(request.responseText);
                }
            });
            request.send(params);
            console.log(name);
        }
    }
}
</script>
</html>